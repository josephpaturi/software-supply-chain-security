# Cloudbuild pipeline for a build with an image
# that passes the vuln policy
steps:
  # Build a 'good' image
  - name: gcr.io/cloud-builders/docker
    entrypoint: /bin/bash
    args:
      - -c
      - |
        docker build -t gcr.io/$PROJECT_ID/joseph-demo:latest -f ./Dockerfile .
    id: build
  
  # Push image
  - name: gcr.io/cloud-builders/docker
    entrypoint: /bin/bash
    args:
    - -c
    - |
      docker push gcr.io/$PROJECT_ID/joseph-demo:latest &&
      docker image inspect gcr.io/$PROJECT_ID/joseph-demo:latest --format '{{index .RepoDigests 0}}' > image-digest.txt &&
      cat image-digest.txt
    id: push
  
  # Kubernetes manifests
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Generate Kubernetes manifest'
    entrypoint: /bin/sh
    args:
    - '-c'
    - |-
      DIGEST=$(gcloud container images describe --format 'value(image_summary.digest)' gcr.io/$PROJECT_ID/joseph-demo:latest)
      sed "s/GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" kubernetes/deployment.yaml.tpl | \
      sed "s/DIGEST/$${DIGEST}/g" > kubernetes/deployment.yaml

  # Deploy to staging cluster
  - name: 'gcr.io/cloud-builders/kubectl'
    id: 'Deploy to staging'
    args: ['apply', '-f', 'kubernetes/']
    env:
    - 'CLOUDSDK_COMPUTE_REGION=$_COMPUTE_REGION'
    - 'CLOUDSDK_CONTAINER_CLUSTER=$_STAGING_CLUSTER'

  # Clear the context - this is required until new gcloud and kubectl builders are published which fix the caching bug.
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Clear staging context'
    entrypoint: '/bin/bash'
    args: ['-c', 'rm -rf ~/.config/gcloud ~/.kube']

substitutions:
    _STAGING_CLUSTER: MISSING_NOTE_NAME  # Use `gcloud builds submit --substitutions ` to set this value
    _COMPUTE_REGION: MISSING_NOTE_NAME  # Use `gcloud builds submit --substitutions ` to set this value
images: ['gcr.io/$PROJECT_ID/joseph-demo:latest']